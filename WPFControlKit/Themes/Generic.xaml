<ResourceDictionary
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:local="clr-namespace:Jin.WPFControlKit">
    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NumericUpDown">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="ValueStates">
                                <!--Make the Value property red when it is negative.-->
                                <VisualState Name="Negative">
                                    <Storyboard>
                                        <ColorAnimation To="Red"
                                            Storyboard.TargetName="TextBlock"
                                            Storyboard.TargetProperty="(Foreground).(Color)"/>
                                    </Storyboard>
                                </VisualState>

                                <!--Return the control to its initial state by return the TextBlock's Foreground to its
original color.-->
                                <VisualState Name="Positive"/>
                            </VisualStateGroup>

                            <VisualStateGroup Name="FocusStates">

                                <!--Add a focus rectangle to highlight the entire control when it has focus.-->
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <!--Return the control to its initial state by
hiding the focus rectangle.-->
                                <VisualState Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="9*"/>
                                <ColumnDefinition Width="1*" MaxWidth="40" MinWidth="20"/>
                            </Grid.ColumnDefinitions>
                            <!--Bind the TextBlock to the Value property-->
                            <TextBox Name="TextBlock" TextAlignment="Right" Grid.RowSpan="2" VerticalAlignment="Stretch"
Text="{Binding RelativeSource={RelativeSource FindAncestor,
AncestorType={x:Type local:NumericUpDown}},
Path=Value}"/>

                            <RepeatButton Content="+" Name="UpButton" Grid.Column="1" Grid.Row="0" MinWidth="20" Padding="0"/>
                            <RepeatButton Content="-" Name="DownButton" Grid.Column="1" Grid.Row="1" MinWidth="20" Padding="0"/>
                            <Rectangle Name="FocusVisual" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                Stroke="Black" StrokeThickness="1"
                                Visibility="Collapsed"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
